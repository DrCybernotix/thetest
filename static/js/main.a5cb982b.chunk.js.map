{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textforms.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","react_default","a","createElement","classNameName","style","backgroundcolour","mode","color","className","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","href","title","aria-label","aria-current","role","class","onClick","toggleMode","for","Textforms","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","value","onChange","event","console","log","target","rows","showAlert","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","filter","element","length","Alert","height","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Fragment","aboutText","body","backgroundColor","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a5cb982b.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n//import React,{useState} from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [DarkOrWot, setDark] = useState({\r\n    //     color: '#15f4ee',\r\n    //     background: 'black'\r\n    // })\r\n     \r\n    //  let SemiDark = {\r\n    //     color: 'black',\r\n    //     background: 'grey'\r\n    // }\r\n    return (\r\n        //<div classNameNameName='container' style={DarkOrWot}> \r\n        <div classNameName=\"container\" style={{backgroundcolour: props.mode==='dark'? 'grey': 'white',color: props.mode=== 'dark'?'grey':'black'}} > \r\n        <div classNameName=\"container\" style={{backgroundcolour: props.mode==='dark'? 'grey': 'white',color: props.mode=== 'dark'?'grey':'black'}}>\r\n            {/* <h1 style={{backgroundcolour: props.mode==='dark'? 'grey': 'white',color: props.mode=== 'dark'?'grey':'black'}}>More Infoüîé</h1> */}\r\n            <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\" style={{backgroundcolour: props.mode==='dark'? 'grey': 'white',color: props.mode=== 'dark'?'grey':'black'}}>\r\n                <div className=\"accordion-item \">\r\n                    <h2 className=\"accordion-header\" id=\"flush-headingOne\" >\r\n                        <button className=\"accordion-button collapsed\"  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n                            What is eSKMIo? üïµÔ∏è‚Äç‚ôÄÔ∏è\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n                        <div className=\"accordion-body\">eSKIMoüßä is a software which <code>labells</code> texts according to the inference, after <code>skimming</code> them into subparts.  </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n                        <button className=\"accordion-button collapsed\"  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n                            How does it skim and labelize your text? üìú\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"flush-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\r\n                        <div className=\"accordion-body\">It is a Machine Learning model developed using <code>TensorFlow</code>, a library in Python. I would encourage you to checkout the Readme file of the project for more information about all the magic that happens at the backendüßô‚Äç‚ôÇÔ∏è</div>\r\n                    </div> \r\n                </div>\r\n                <div className=\"accordion-item \">\r\n                    <h2 className=\"accordion-header\" id=\"flush-headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\"  data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n                            Feel free to contribute and suggestions for filling out the spaces I may have missed.üå¥\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"flush-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\r\n                        <div className=\"accordion-body\">You can checkout the GitHub link in the About section of the Navigation bar.</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/index.html\" >{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\"     >About eSKIMo</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/index.html\"    >GitHub</a>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\"  href=\"/index.html\"    id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                About Me\r\n                            </a>\r\n                            <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <li><a className=\"dropdown-item\"  href=\"/index.html\"   >My Portfolio</a></li>\r\n                                <li><a className=\"dropdown-item\"   href=\"/index.html\"  >LinkedIN</a></li>\r\n                                <li><hr className=\"dropdown-divider\" /></li>\r\n                                <li><a className=\"dropdown-item\"  href=\"/index.html\"   >Twitter</a></li>\r\n                            </ul>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\">Disabled</a>\r\n        </li> */}\r\n                    </ul>\r\n                    <form className=\"d-flex\">\r\n                        {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button> */}\r\n                        <div class={`form-check form-switch text-${props.mode=== 'light'? 'Dark' : 'light'}`}>\r\n                            <input class=\"form-check-input\" onClick={props.toggleMode}type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                                <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Dark Modeüåô</label>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\n\r\n\r\n\r\nexport default function Textforms(props) {\r\n    \r\n    const handleOnClick=()=>{\r\n        console.log(\"Text is being labelized‚è≥\"+text)\r\n        // let newText=text.funtion();\r\n        // setText(newText);\r\n        setText(\"Text is being labelled‚è≥\")\r\n        props.showAlert(\"Text is being labelled‚è≥\", \"success\")\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Removed Extra Spaces‚úî\", \"success\")\r\n        }\r\n    const handleCopy=()=>{\r\n        props.showAlert(\"Text has been copied to your clipboard‚úî\", \"success\")\r\n        var text = document.getElementById(\"mybocs\")\r\n        text.select()\r\n        navigator.clipboard.writeText(text.value)\r\n        }\r\n    const handleOnChange=(event)=>{\r\n        console.log(\"On change‚è≥\");\r\n        setText(event.target.value);\r\n\r\n    }\r\n    const [text, setText] = useState('Start Typing or Paste hereüëÄ');\r\n  \r\n    return (\r\n        <div>\r\n            {/* <h3>{props.heading}</h3> */}\r\n        {/* <div className=\"mb-3\">\r\n            <label for=\"exampleFormControlInput1\" className=\"form-label\">Email address</label>\r\n            <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\"/>\r\n        </div> */}\r\n        <div className=\"mb-3\" style={{color: props.mode=== 'dark'?'white':'#042743'}}>\r\n            <label for=\"mybocs\" className=\"form-label\"><h3>{props.heading}</h3></label>\r\n            <textarea className=\"form-control\" value = {text} onChange={handleOnChange} style={{backgroundcolour: props.mode==='dark'? '#042743': 'white',color: props.mode=== 'dark'?'#042743':'black'}} id=\"mybocs\" rows=\"17\" ></textarea>\r\n            \r\n        </div>\r\n        <button className=\"btn btn-primary mx-2 my-2\"onClick={handleOnClick}>Labelize!</button>\r\n        <button className= \"btn btn-primary mx-2 my-2\" onClick={handleCopy}> Copy Text</button>\r\n        <button className= \"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n        \r\n        <div className=\"container mx-2 my-3\" style={{color: props.mode=== 'dark'?'white':'#042743'}}>\r\n            <h1>Data Summary :</h1>\r\n            <p>Text contains {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length-1} total words and {text.length} total characters</p>\r\n            <h1>Data Preview :</h1>\r\n            <p>{text.length>0?text: 'Enter something in the above textbox to preview it here'}</p>\r\n        </div>\r\n        </div>\r\n            )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n<div style={{height:'50px'}}>\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show my-3\" role=\"alert`}>\r\n                {/* <strong>Hey user!</strong> {props.alert}  */}\r\n                <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textforms from './components/Textforms';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Link\n//   } from \"react-router-dom\";\n\n\nfunction App() {\n    const[mode, setMode] = useState('light');\n    const toggleMode = ()=>{\n        if(mode === 'light'){\n          setMode('dark');\n          document.body.style.backgroundColor = '#042743';\n          showAlert(\"Dark Mode has been enabled\",\"success\");\n          document.title = 'eSKIMo - Dark';\n\n        //   for flashes :\n        //   setInterval(()=> {\n        //     document.title = 'Install eSKIMo';\n        //     }, 1500);\n        }\n        else{ \n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Light Mode has been enabled\",\"success\");\n        }\n    }\n    const [alert, setAlert] = useState(null)\n    const showAlert = (message, type)=>{\n        setAlert({\n        msg: message,\n        type: type\n        })\n        setTimeout(() => {\n            setAlert(null);\n        }, 3000);\n        }\n    // const alert2 =\"Feel free to checkout my GitHub for suggestions and contributions.\"\n    return (\n        <>\n            <Navbar title=\"eSKIMo\" aboutText=\"About eSKIMo\" mode={mode} toggleMode={toggleMode} />\n            <Alert alert={alert}/>\n            <div className=\"container\"><Textforms showAlert={showAlert} heading=\"Enter the text which you want to Labelizeüìú\"mode={mode} /></div>\n            <div className='container my-5'><About mode={mode}/></div>\n            {/* <Alert alert=\"Feel free to checkout my GitHub for suggestions and contributions\"/>  */}\n            {/* <Alert alert={alert2}/> */}\n\n        </>\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}